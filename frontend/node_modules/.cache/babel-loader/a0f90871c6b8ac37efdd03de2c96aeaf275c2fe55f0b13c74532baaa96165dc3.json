{"ast":null,"code":"const express = require('express');\nconst {\n  spawn\n} = require('child_process');\nconst app = express();\nconst port = 3000;\n\n// Endpoint to run the Python script\napp.get('/runPythonScript', (req, res) => {\n  // Run the Python script\n  const pythonProcess = spawn('python', ['your_python_script.py']);\n\n  // Collect output from Python script\n  let output = '';\n  pythonProcess.stdout.on('data', data => {\n    output += data.toString();\n  });\n\n  // Handle errors\n  pythonProcess.stderr.on('data', data => {\n    console.error(`Error from Python script: ${data}`);\n    res.status(500).send('An error occurred while running the Python script.');\n  });\n\n  // When Python script execution is finished\n  pythonProcess.on('close', code => {\n    console.log(`Python script exited with code ${code}`);\n    // Send output back to the frontend\n    res.send(output);\n  });\n});\napp.listen(port, () => {\n  console.log(`Server is running on http://localhost:${port}`);\n});","map":{"version":3,"names":["express","require","spawn","app","port","get","req","res","pythonProcess","output","stdout","on","data","toString","stderr","console","error","status","send","code","log","listen"],"sources":["C:/Save Data Here/Coding stuff/Projects/reconnect/frontend/src/views/explore.js"],"sourcesContent":["const express = require('express');\r\nconst { spawn } = require('child_process');\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n// Endpoint to run the Python script\r\napp.get('/runPythonScript', (req, res) => {\r\n    // Run the Python script\r\n    const pythonProcess = spawn('python', ['your_python_script.py']);\r\n\r\n    // Collect output from Python script\r\n    let output = '';\r\n    pythonProcess.stdout.on('data', (data) => {\r\n        output += data.toString();\r\n    });\r\n\r\n    // Handle errors\r\n    pythonProcess.stderr.on('data', (data) => {\r\n        console.error(`Error from Python script: ${data}`);\r\n        res.status(500).send('An error occurred while running the Python script.');\r\n    });\r\n\r\n    // When Python script execution is finished\r\n    pythonProcess.on('close', (code) => {\r\n        console.log(`Python script exited with code ${code}`);\r\n        // Send output back to the frontend\r\n        res.send(output);\r\n    });\r\n});\r\n\r\napp.listen(port, () => {\r\n    console.log(`Server is running on http://localhost:${port}`);\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEC;AAAM,CAAC,GAAGD,OAAO,CAAC,eAAe,CAAC;AAE1C,MAAME,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,IAAI,GAAG,IAAI;;AAEjB;AACAD,GAAG,CAACE,GAAG,CAAC,kBAAkB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACtC;EACA,MAAMC,aAAa,GAAGN,KAAK,CAAC,QAAQ,EAAE,CAAC,uBAAuB,CAAC,CAAC;;EAEhE;EACA,IAAIO,MAAM,GAAG,EAAE;EACfD,aAAa,CAACE,MAAM,CAACC,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAK;IACtCH,MAAM,IAAIG,IAAI,CAACC,QAAQ,CAAC,CAAC;EAC7B,CAAC,CAAC;;EAEF;EACAL,aAAa,CAACM,MAAM,CAACH,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAK;IACtCG,OAAO,CAACC,KAAK,CAAC,6BAA6BJ,IAAI,EAAE,CAAC;IAClDL,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,oDAAoD,CAAC;EAC9E,CAAC,CAAC;;EAEF;EACAV,aAAa,CAACG,EAAE,CAAC,OAAO,EAAGQ,IAAI,IAAK;IAChCJ,OAAO,CAACK,GAAG,CAAC,kCAAkCD,IAAI,EAAE,CAAC;IACrD;IACAZ,GAAG,CAACW,IAAI,CAACT,MAAM,CAAC;EACpB,CAAC,CAAC;AACN,CAAC,CAAC;AAEFN,GAAG,CAACkB,MAAM,CAACjB,IAAI,EAAE,MAAM;EACnBW,OAAO,CAACK,GAAG,CAAC,yCAAyChB,IAAI,EAAE,CAAC;AAChE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}